[{"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\App.js":"2","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Todo.js":"4","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Filter.js":"5","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Input.js":"6","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\TodoItem.js":"7","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\lib\\util.js":"8","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\hooks\\firebaseStorage.js":"9","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\lib\\firebase.js":"10"},{"size":517,"mtime":1621587287786,"results":"11","hashOfConfig":"12"},{"size":291,"mtime":1621587287776,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1621587287789,"results":"14","hashOfConfig":"12"},{"size":2594,"mtime":1621591362790,"results":"15","hashOfConfig":"12"},{"size":1033,"mtime":1621587287778,"results":"16","hashOfConfig":"12"},{"size":1035,"mtime":1621587287779,"results":"17","hashOfConfig":"12"},{"size":754,"mtime":1621587287781,"results":"18","hashOfConfig":"12"},{"size":68,"mtime":1621587287787,"results":"19","hashOfConfig":"12"},{"size":1142,"mtime":1621589907845,"results":"20","hashOfConfig":"12"},{"size":1363,"mtime":1621589947526,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"volh58",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\index.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Todo.js",["44","45"],"import React, { useState } from 'react';\r\n\r\n/* \r\n  【Todoのデータ構成】\r\n　・key：Todoを特定するID（String）\r\n　・text：Todoの内容（String）\r\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\r\n*/\r\n\r\n/* コンポーネント */\r\nimport TodoItem from './TodoItem';\r\nimport Input from './Input';\r\nimport Filter from './Filter';\r\n\r\n/* カスタムフック */\r\n// import useStorage from '../hooks/storage';\r\nimport useFirebaseStorage from '../hooks/firebaseStorage';\r\n\r\n/* ライブラリ */\r\nimport { getKey } from '../lib/util';\r\n\r\nfunction Todo() {\r\n  // const [items, putItems, clearItems] = useStorage();\r\n  // const [items, putItems] = React.useState([\r\n  //     /* テストコード 開始 */\r\n  //   { key: getKey(), text: '日本語の宿題', done: false },\r\n  //   { key: getKey(), text: 'reactを勉強する', done: false },\r\n  //   { key: getKey(), text: '明日の準備をする', done: false },\r\n  //   /* テストコード 終了 */\r\n  // ]);\r\n  const [items, addItem, updateItem, clearItems] = useFirebaseStorage();\r\n  const [filter, setFilter] = useState('すべて');\r\n  const itemFilter = items.filter((item) => {\r\n    if (filter === 'すべて') return true;\r\n    if (filter === '未完了') return !item.done;\r\n    if (filter === '完了済み') return item.done;\r\n  });\r\n\r\n  function handleCheckBox(params) {\r\n    // const newItems = items.map((item) => {\r\n    //   if (item.key === params.key) {\r\n    //     item.done = !item.done;\r\n    //   }\r\n    //   return item;\r\n    // });\r\n    // putItems(newItems);\r\n    updateItem(params);\r\n  }\r\n\r\n  function handleAdd(text) {\r\n    // const newItems = [...items];\r\n    // const newItem = {\r\n    //   key: getKey(),\r\n    //   ...item,\r\n    // };\r\n    // console.log(newItem);\r\n    // newItems.push(newItem);\r\n    // putItems(newItems);\r\n    addItem({ text, done: false });\r\n  }\r\n\r\n  function handleFilter(params) {\r\n    setFilter(params);\r\n    console.log(params);\r\n  }\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      <div className=\"panel-heading\">ITSS ToDoアプリ</div>\r\n      <Input onAdd={handleAdd} />\r\n      <Filter choose={filter} onClickFilter={handleFilter} />\r\n      {itemFilter.map((item) => (\r\n        <TodoItem key={item.key} item={item} onClickCheckBox={handleCheckBox} />\r\n      ))}\r\n      <div className=\"panel-block\">{itemFilter.length} items</div>\r\n      <div className=\"panel-block\">\r\n        <button className=\"button\" onClick={clearItems}>\r\n          全てのToDoを削除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Filter.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\Input.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\components\\TodoItem.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\lib\\util.js",[],"C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\hooks\\firebaseStorage.js",["46"],"import { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  addFirebaseItem,\r\n  updateFirebaseItem,\r\n  getFirebaseItems,\r\n  clearFirebaseItem,\r\n} from '../lib/firebase';\r\n\r\nfunction useFirebaseStorage() {\r\n  const [items, setItems] = useState([]);\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [items]);\r\n\r\n  const getItems = async () => {\r\n    const _items = await getFirebaseItems();\r\n    setItems(_items);\r\n  };\r\n\r\n  const addItem = async (item) => {\r\n    const newItem = { text: item.text, done: item.done };\r\n    await addFirebaseItem(newItem);\r\n    setItems([...items, newItem]);\r\n  };\r\n\r\n  const updateItem = async (checked) => {\r\n    const changes = { done: !checked.done };\r\n    await updateFirebaseItem(changes, checked.id);\r\n    const newItems = items.map((item) => {\r\n      if (item.id === checked.id) {\r\n        item = { ...item, changes };\r\n      }\r\n      return item;\r\n    });\r\n    setItems(newItems);\r\n  };\r\n\r\n  const clearItems = () => {\r\n    items.map((item) => {\r\n      clearFirebaseItem(item);\r\n    });\r\n    setItems([]);\r\n  };\r\n\r\n  return [items, addItem, updateItem, clearItems];\r\n}\r\n\r\nexport default useFirebaseStorage;\r\n","C:\\Users\\Admin\\Documents\\itss_std_react_todo_k62\\src\\lib\\firebase.js",[],{"ruleId":"47","severity":1,"message":"48","line":20,"column":10,"nodeType":"49","messageId":"50","endLine":20,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":33,"column":42,"nodeType":"53","messageId":"54","endLine":33,"endColumn":44},{"ruleId":"51","severity":1,"message":"55","line":40,"column":22,"nodeType":"53","messageId":"56","endLine":40,"endColumn":24},"no-unused-vars","'getKey' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside"]